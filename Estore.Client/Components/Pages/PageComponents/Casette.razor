@page "/cd"
@rendermode InteractiveServer
@using Core.Services
@using Core.DTOs
@using Core.Extensions
@using Estore.Client.Components.Pages
@inject ProductService productService
@inject ISnackbar Snackbar

<div class="container mb-5">
    <div class="row">
        @if (products != null)
        {

            @foreach (var item in products)
            {
                <div class="col-md-3 mt-5 justify-content-center">
                    <MudGrid Style="">
                        <MudCard Style="width:12rem">
                            <MudCardMedia Image="@($"{picFolder}{item.PictureUrl}")" Height="200" />
                            <MudCardContent>
                                <MudText Typo="Typo.h5">@item.Artist</MudText>
                                <MudText Typo="Typo.body2">@item.AlbumTitle</MudText>
                                <small class="text-muted">
                                    @item.Category.Name
                                    <span class="fw-bold">@item.Price :-</span>
                                </small>
                            </MudCardContent>
                            <div class="d-flex justify-content-end">
                                <MudCardActions>
                                    <MudButton Variant="Variant.Filled" Size="Size.Small" Color="Color.Success" Style="background-color: rgba(56, 142, 60, 0.7);" OnClick="@(()=>AddItemToCart(item))">Buy</MudButton>
                                </MudCardActions>
                            </div>
                        </MudCard>
                    </MudGrid>
                </div>
            }
        }
    </div>


</div>

@code {
    public IEnumerable<ProductDTO>? products { get; set; }

    public string picFolder = "/images/AlbumCovers/";

    protected override async Task OnInitializedAsync()
    {
        products = await productService.GetCasetteAsync();

    }

    public void AddItemToCart(ProductDTO productDTO)
    {
        var cartItem = productDTO.ToCartItemDTO();

        cartItem.Quantity = 1;

        ShoppingCart.MyCart.CartItems.Add(cartItem);

        Snackbar.Add($"Item added to cart!", Severity.Success);
    }

}



